<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <table id="table"><tr><th onclick="reOrder('name')">Name</th><th>Colors</th><th>Serial Number</th><th>Amount Produced</th></tr>
</table>
</body>
<script>
    // have the pog grab the data from the json file.
var pog = <%- JSON.stringify(pog.pogs) %>
// these booleans check the array if it already sorted.
var namesorted = false
 // first create the table using the pog data.
for (const index in pog) {
    // create rows for the table to append with the imported data.
    let row = document.createElement("tr")
    row.setAttribute("id",`${index}`)
    row.innerHTML = `<th> ${pog[index].name}</th> <th> ${pog[index].colors}</th> <th> ${pog[index]['Serial Number']}</th>  <th> ${pog[index]['Amount Produced']}</th>`
    document.getElementById('table').appendChild(row)
}

// when the header of the table is click except color header. it will sort the whole table.
function reOrder(label){
    // this check which header is click and which part of the array should be sorted.
    switch (label) {
        case "name":
        sorted('name');
        pog.sort(sortName);
            break;
        
        default:
            break;
    }
    console.log("order");
    // recreate the whole  table using the new sorted array.
    for (const index in pog) {
    let row = document.getElementById(`${index}`)
    row.innerHTML = `<th> ${pog[index].name}</th> <th> ${pog[index].colors}</th> <th> ${pog[index]['Serial Number']}</th>  <th> ${pog[index]['Amount Produced']}</th>`
    document.getElementById('table').appendChild(row)
}
}
// this function is going to check the whole array if it already sorted, if it is, than it true.
function sorted(label){
    namesorted = true
    // only happen when we sorting by Serial Number and Amount Produced.
    if (label == 'Serial Number' || label == 'Amount Produced') {
        
        //only if we are sorting the array by name
    } else if(label == 'name') {
        for (let i = 0; i < pog.length; i++) {
            if (pog[i+1]){
                if (pog[i].name.toLowerCase() > pog[i+1].name.toLowerCase()) {
            console.log(pog[i].name.toLowerCase() + " " + pog[i+1].name.toLowerCase());
            namesorted = false
            console.log("false");
            break;
            }
            }
 
        }
    }
    
}
// this will sort the whole array by using it name and compare to other name in the array.
function sortName(a,b){
    console.log("start sorted");
    let fa = a.name.toLowerCase()
    let fb = b.name.toLowerCase()
    if (namesorted == false) {
        if (fa < fb){
        return -1
    } else if (fa > fb){
        return 1;
    } else {
        return 0;
    }
    } else {
        if (fa < fb){
        return 1
    } else if (fa > fb){
        return -1;
    } else {
        return 0;
    } 
    }

}
</script>
</html>